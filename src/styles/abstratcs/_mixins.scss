@import "./functions";
@import "./variables";

@mixin no-select {
	user-select: none;
	-moz-user-select: none;
	-webkit-user-select: none;
}

@mixin button-color($color, $bg, $darken, $lighten, $transition, $outlined: false) {
	@if $outlined {
		background-color: $bg;
		border: 1px solid $color;
		color: $color;

		&:hover {
			transition: $transition;
			color: darken($color, $darken);
			border-color: darken($color, $darken);
		}

		&:active,
		&:visited {
			transition: none;
			color: lighten($color, $lighten);
			border-color: lighten($color, $lighten);
		}
	} @else {
		background-color: $bg;
		color: $color;

		&:hover {
			transition: $transition;
			background-color: darken($bg, $darken);
		}

		&:active,
		&:visited {
			transition: none;
			background-color: lighten($bg, $lighten);
		}
	}
}

/*
	Creates all responsive size for component. Example map is below
	$input-height: (
		"xs": (
			"sm": 2.8rem,
			"md": 3.2rem,
			"lg": 3.6rem,
		),
		"sm": (
			"sm": 2.4rem,
			"md": 2.8rem,
			"lg": 3.2rem,
		)
	);

	responsive-sizes($input-height);
*/
@mixin responsive-sizes($list, $property) {
	@each $breakpoint, $values in $list {
		@if ($breakpoint == "xs") {
			@each $size, $value in $values {
				&-#{$size} {
					#{$property}: $value;
				}
			}
		} @else {
			@media (min-width: map-get($breakpoints, $breakpoint)) {
				@each $size, $value in $values {
					&-#{$size} {
						#{$property}: $value;
					}
				}
			}
		}
	}
}
